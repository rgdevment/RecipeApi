plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube' version '5.0.0.4638'
}

group = 'cl.tica.portfolio'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'net.datafaker:datafaker:2.2.2'
    runtimeOnly 'com.h2database:h2'
}

sonar {
    properties {
        property "sonar.projectKey", "rgdevment_RecipeApi"
        property "sonar.organization", "rgdevment"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

test {
    jvmArgs("-XX:+EnableDynamicAgentLoading", "-Xshare:off")
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

checkstyle {
    toolVersion = '10.15.0'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}